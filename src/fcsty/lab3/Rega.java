package fcsty.lab3;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

//–ü–∞—à–∞ –Ø–∫–æ–≤–ª–µ–≤üòéüòúüß†, [05.11.2021 20:51]
//        –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ –∏–º–µ—é—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç
//        –∂–µ –±—É–∫–≤–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω, –∏ false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
//        –ü—Ä–∏–º–µ—Ä:
//        sameLetterPattern("ABAB", "CDCD") ‚ûû true
//        sameLetterPattern("ABCBA", "BCDCB") ‚ûû true
//        sameLetterPattern("FFGG", "CDCD") ‚ûû false
//        sameLetterPattern("FFFF", "ABCD") ‚ûû false

public class Rega {
    public static void main(String[] args) {
        sameLetterPattern("ABAB", "CDCD");
        sameLetterPattern("ABCBA", "BCDCB");
        sameLetterPattern("FFGG", "CDCD");
        sameLetterPattern("FFFF", "ABCD");
    }

    public static boolean sameLetterPattern(String s1, String s2) {
        Pattern pattern = Pattern.compile("[A-D]+");//—à–∞–±–ª–æ–Ω .compile(IF<KJadas)
        Matcher matcher1 = pattern.matcher(s1);//–Ω–∞—Ö–æ–¥–∏—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        Matcher matcher2 = pattern.matcher(s2);//–Ω–∞—Ö–æ–¥–∏—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–∏–µ

        //–°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –≤—Å–µ–≥–æ, —á—Ç–æ –º—ã –ø–∏—à–µ–º –≤ –∫–æ–¥–µ
        Pattern.compile("[A-D]+").matcher(s1).find();
        //–°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω(—à–∞–±–ª–æ–Ω).—Å —á–µ–º —Å–≤–µ—Ä—è–µ–º().–µ—Å—Ç—å –ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ

        if (matcher1.find() == matcher2.find()) {//find -–Ω–∞—à–µ–ª
            System.out.println("{" + s1 + " " + s2 + "}" + "->" + "true");
            return true;
        }
        System.out.println("{" + s1 + " " + s2 + "}" + "->" + "false");
        return false;
    }
}

